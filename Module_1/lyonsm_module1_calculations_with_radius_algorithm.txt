"""
File: lyonsm_module1_calculations__with_radius_algorithm
Author: Marki Lyons
Date: 2023-10-29
Description: This is an algorithm to plan a program that will calculate and display the circumference and area of a circle, as well as the volume of a sphere, based on user input of a radius.

"""
Step 1
- Import the math module
- Intro salutation: greet the user
- Ask for the user to input a radius
- User input is assigned to the variable "radius"
- Test eval() and float() for best ouptput
- Example:
	radius = eval(input("Please enter a radius for a circle: "))

Step 2
- Create a function to calculate the circumference of the circle based on the radius
- Function name: calc_circumference
- Formula: C = 2πr
- Translate the formula to pythonic code
- Assign a variable to calculate the circumference: "circumference"
- Example:
	circumference = 2 * math.pi * radius
- Call the function and print f"The circumference of a circle with a radius of {radius} is {circumference}"

Step 3
- Create a function to calculate the area of the circle based on the radius
- Function name: calc_area
- Formula: A = πr**2
- Translate the formula to pythonic code
- Assign a variable to calculate the area: "area"
- Example:
	area = math.pi * radius ** 2
- Call the function and print f"The area of a circle with a radius of {radius} is {area}"

Step 4
- Create a function to calculate the volume of a sphere based on the radius
- Function name: calc_volume
- Formula: V = 4/3 πr**3
- Translate the formula to pythonic code
- Assign a variable to calculate the volume of the sphere: "volume"
- Example:
	volume = 4/3 * math.pi * radius ** 3
- Call the function and print f"The volume of a sphere with a radius of {radius} is {volume}"

Step 5
- Import sleep from time to slow the program down
	- for readability
	- makes it seem like it needs a bit more time to calculate the functions
- Add outro salutation: good work!